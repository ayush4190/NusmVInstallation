-- Power window simulation demonstration using NUSMV
-- Assumptions
-- 1. Every second the window moves 2 frames hence the total length of the window is covered in 2 frames.
-- 2. If any obstacle si encountered we move the window down by 2 frames.
-- 3. Figure out the logic behind the countinous press and counter to keep track of it.

MODULE main
VAR
postion: 0 .. 10;
obstacle : boolean;
passengerButtonUp : boolean;
passengerButtonDown : boolean;
driverUp: boolean ;
driverDown: boolean;
continuouspress : boolean;
counter : 0 .. 10;


ASSIGN
init(postion) :=0;
init(counter) :=0;

TRANS
case
-- considering all the cases with obstacles as obstacles has higher priority

(obstacle & driverUp) & (postion != 0) : next(postion) = postion -2;

obstacle & driverDown : next(postion) = postion + 0 ;

(obstacle & passengerButtonUp) & (postion != 0) : next(postion)= postion - 2 ;
--
obstacle & passengerButtonDown : next(postion) = postion + 0;


-- considering all the cases with driver side as priority

-- implementing the continous press 
(postion = 10 | postion =0) : next(continuouspress)= FALSE ;

driverUp & next(driverUp) : ((next(postion) = postion + 2 ) & ()) & (next(continuouspress) = TRUE);

continuouspress & (postion != 10) : (next(counter) = counter + 1) & (next(postion) = postion + 2);

driverUp & (postion != 10) : next(postion) = postion + 2;
--
driverDown  & (postion != 0): next(postion) = postion - 2;


--considering all the cases with passenger side

passengerButtonUp  & (postion != 10) : next(postion) = postion + 2 ;

passengerButtonDown  & (postion != 0) : next(postion) = postion - 2 ;

TRUE: next(postion) = postion + 0;
esac;


-- LTLSPEC

LTLSPEC F((!obstacle & (passengerButtonUp | driverUp)) -> postion = 2);


